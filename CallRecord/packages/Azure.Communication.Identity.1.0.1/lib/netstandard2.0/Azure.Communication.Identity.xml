<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Communication.Identity</name>
    </assembly>
    <members>
        <member name="T:Azure.Communication.Identity.CommunicationIdentityClient">
            <summary>
            The Azure Communication Services Identity client.
            </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.Identity.CommunicationIdentityClient" />.</summary>
            <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.#ctor(System.String,Azure.Communication.Identity.CommunicationIdentityClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.Identity.CommunicationIdentityClient" />.</summary>
            <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Communication.Identity.CommunicationIdentityClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.Identity.CommunicationIdentityClient" />.</summary>
            <param name="endpoint">The URI of the Azure Communication Services resource.</param>
            <param name="keyCredential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.Identity.CommunicationIdentityClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.Identity.CommunicationIdentityClient" />.</summary>
            <param name="endpoint">The URI of the Azure Communication Services resource.</param>
            <param name="tokenCredential">The <see cref="T:Azure.Core.TokenCredential" /> used to authenticate requests, such as DefaultAzureCredential.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.Identity.CommunicationIdentityClient" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.CreateUser(System.Threading.CancellationToken)">
            <summary>Creates a new <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.CreateUserAsync(System.Threading.CancellationToken)">
            <summary>Asynchronously creates a new <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.CreateUserAndToken(System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary>Creates a new <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="scopes">The scopes that the token should have.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.CreateUserAndTokenAsync(System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary>Asynchronously creates a new <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="scopes">The scopes that the token should have.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.DeleteUser(Azure.Communication.CommunicationUserIdentifier,System.Threading.CancellationToken)">
            <summary>Asynchronously deletes a <see cref="T:Azure.Communication.CommunicationUserIdentifier" />, revokes its tokens and deletes its data.</summary>
            <param name="communicationUser"> The user to be deleted.</param>
            <param name="cancellationToken"> The cancellation token to use.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error.</exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.DeleteUserAsync(Azure.Communication.CommunicationUserIdentifier,System.Threading.CancellationToken)">
            <summary>Asynchronously deletes a <see cref="T:Azure.Communication.CommunicationUserIdentifier" />, revokes its tokens and deletes its data.</summary>
            <param name="communicationUser"> The user to be deleted.</param>
            <param name="cancellationToken"> The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.GetToken(Azure.Communication.CommunicationUserIdentifier,System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary>Gets a token for a <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="communicationUser">The <see cref="T:Azure.Communication.CommunicationUserIdentifier" /> for whom to get a token.</param>
            <param name="scopes">The scopes that the token should have.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error.</exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.GetTokenAsync(Azure.Communication.CommunicationUserIdentifier,System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary>Asynchronously gets a token for a <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="communicationUser">The <see cref="T:Azure.Communication.CommunicationUserIdentifier" /> for whom to get a token.</param>
            <param name="scopes">The scopes that the token should have.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.RevokeTokens(Azure.Communication.CommunicationUserIdentifier,System.Threading.CancellationToken)">
            <summary>Revokes all the tokens created for a user.</summary>
            <param name="communicationUser">The <see cref="T:Azure.Communication.CommunicationUserIdentifier" /> whose tokens will be revoked.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error.</exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClient.RevokeTokensAsync(Azure.Communication.CommunicationUserIdentifier,System.Threading.CancellationToken)">
            <summary>Asynchronously revokes all the tokens created for a <see cref="T:Azure.Communication.CommunicationUserIdentifier" />.</summary>
            <param name="communicationUser">The <see cref="T:Azure.Communication.CommunicationUserIdentifier" /> whose tokens should get revoked.</param>
            <param name="cancellationToken">The cancellation token to use.</param>
        </member>
        <member name="T:Azure.Communication.Identity.CommunicationIdentityClientOptions">
            <summary>
            The options for communication <see cref="T:Azure.Communication.Identity.CommunicationIdentityClientOptions" />.
            </summary>
        </member>
        <member name="F:Azure.Communication.Identity.CommunicationIdentityClientOptions.LatestVersion">
            <summary>
            The latest version of the identity service.
            </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityClientOptions.#ctor(Azure.Communication.Identity.CommunicationIdentityClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Communication.Identity.CommunicationIdentityClientOptions" />.
            </summary>
        </member>
        <member name="T:Azure.Communication.Identity.CommunicationIdentityClientOptions.ServiceVersion">
            <summary>
            The token service version.
            </summary>
        </member>
        <member name="F:Azure.Communication.Identity.CommunicationIdentityClientOptions.ServiceVersion.V2021_03_07">
            <summary>
            The V2021_03_07 of the identity service.
            </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of CommunicationIdentityRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The communication resource, for example https://my-resource.communication.azure.com. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.CreateAsync(System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary> Create a new identity. </summary>
            <param name="createTokenWithScopes"> Also create access token for the created identity. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.Create(System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary> Create a new identity. </summary>
            <param name="createTokenWithScopes"> Also create access token for the created identity. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary> Delete the identity, revoke all tokens for the identity and delete all associated data. </summary>
            <param name="id"> Identifier of the identity to be deleted. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.Delete(System.String,System.Threading.CancellationToken)">
            <summary> Delete the identity, revoke all tokens for the identity and delete all associated data. </summary>
            <param name="id"> Identifier of the identity to be deleted. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.RevokeAccessTokensAsync(System.String,System.Threading.CancellationToken)">
            <summary> Revoke all access tokens for the specific identity. </summary>
            <param name="id"> Identifier of the identity. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.RevokeAccessTokens(System.String,System.Threading.CancellationToken)">
            <summary> Revoke all access tokens for the specific identity. </summary>
            <param name="id"> Identifier of the identity. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.IssueAccessTokenAsync(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary> Issue a new token for an identity. </summary>
            <param name="id"> Identifier of the identity to issue token for. </param>
            <param name="scopes"> List of scopes attached to the token. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> or <paramref name="scopes" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityRestClient.IssueAccessToken(System.String,System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope},System.Threading.CancellationToken)">
            <summary> Issue a new token for an identity. </summary>
            <param name="id"> Identifier of the identity to issue token for. </param>
            <param name="scopes"> List of scopes attached to the token. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> or <paramref name="scopes" /> is null. </exception>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationError">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationError.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of CommunicationError. </summary>
            <param name="code"> The error code. </param>
            <param name="message"> The error message. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="code" /> or <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationError.#ctor(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.Communication.Identity.Models.CommunicationError},Azure.Communication.Identity.Models.CommunicationError)">
            <summary> Initializes a new instance of CommunicationError. </summary>
            <param name="code"> The error code. </param>
            <param name="message"> The error message. </param>
            <param name="target"> The error target. </param>
            <param name="details"> Further details about specific errors that led to this error. </param>
            <param name="innerError"> The inner error if any. </param>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationError.Code">
            <summary> The error code. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationError.Message">
            <summary> The error message. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationError.Target">
            <summary> The error target. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationError.Details">
            <summary> Further details about specific errors that led to this error. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationError.InnerError">
            <summary> The inner error if any. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationErrorResponse">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationErrorResponse.#ctor(Azure.Communication.Identity.Models.CommunicationError)">
            <summary> Initializes a new instance of CommunicationErrorResponse. </summary>
            <param name="error"> The Communication Services error. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="error" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationErrorResponse.Error">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationIdentity">
            <summary> A communication identity. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationIdentity.#ctor(System.String)">
            <summary> Initializes a new instance of CommunicationIdentity. </summary>
            <param name="id"> Identifier of the identity. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationIdentity.Id">
            <summary> Identifier of the identity. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationIdentityAccessTokenRequest">
            <summary> The CommunicationIdentityAccessTokenRequest. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationIdentityAccessTokenRequest.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.Identity.CommunicationTokenScope})">
            <summary> Initializes a new instance of CommunicationIdentityAccessTokenRequest. </summary>
            <param name="scopes"> List of scopes attached to the token. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scopes" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationIdentityAccessTokenRequest.Scopes">
            <summary> List of scopes attached to the token. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationIdentityCreateRequest">
            <summary> The CommunicationIdentityCreateRequest. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationIdentityCreateRequest.#ctor">
            <summary> Initializes a new instance of CommunicationIdentityCreateRequest. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.Models.CommunicationIdentityCreateRequest.CreateTokenWithScopes">
            <summary> Also create access token for the created identity. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.Models.CommunicationIdentityModelFactory">
            <summary>
            Model factory that enables mocking for the Identity library.
            </summary>
        </member>
        <member name="M:Azure.Communication.Identity.Models.CommunicationIdentityModelFactory.CommunicationUserIdentifierAndToken(Azure.Communication.CommunicationUserIdentifier,Azure.Core.AccessToken)">
            <summary>
            Initializes a new instance of the <see cref="M:Azure.Communication.Identity.Models.CommunicationIdentityModelFactory.CommunicationUserIdentifierAndToken(Azure.Communication.CommunicationUserIdentifier,Azure.Core.AccessToken)" /> class.
            </summary>
            <param name="user"> The user stored in the instance. </param>
            <param name="accessToken"> The access token stored in the instance. </param>
            <returns>A new <see cref="M:Azure.Communication.Identity.Models.CommunicationIdentityModelFactory.CommunicationUserIdentifierAndToken(Azure.Communication.CommunicationUserIdentifier,Azure.Core.AccessToken)" /> instance for mocking.</returns>
        </member>
        <member name="T:Azure.Communication.Identity.CommunicationIdentityAccessToken">
            <summary> An access token. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationIdentityAccessToken.#ctor(System.String,System.DateTimeOffset)">
            <summary> Initializes a new instance of CommunicationIdentityAccessToken. </summary>
            <param name="token"> The access token issued for the identity. </param>
            <param name="expiresOn"> The expiry time of the token. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="token" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationIdentityAccessToken.Token">
            <summary> The access token issued for the identity. </summary>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationIdentityAccessToken.ExpiresOn">
            <summary> The expiry time of the token. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.CommunicationTokenScope">
            <summary> List of scopes for an access token. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.#ctor(System.String)">
            <summary> Determines if two <see cref="T:Azure.Communication.Identity.CommunicationTokenScope" /> values are the same. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationTokenScope.Chat">
            <summary> chat. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.op_Equality(Azure.Communication.Identity.CommunicationTokenScope,Azure.Communication.Identity.CommunicationTokenScope)">
            <summary> Determines if two <see cref="T:Azure.Communication.Identity.CommunicationTokenScope" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.op_Inequality(Azure.Communication.Identity.CommunicationTokenScope,Azure.Communication.Identity.CommunicationTokenScope)">
            <summary> Determines if two <see cref="T:Azure.Communication.Identity.CommunicationTokenScope" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.op_Implicit(System.String)~Azure.Communication.Identity.CommunicationTokenScope">
            <summary> Converts a string to a <see cref="T:Azure.Communication.Identity.CommunicationTokenScope" />. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.Equals(Azure.Communication.Identity.CommunicationTokenScope)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationTokenScope.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationTokenScope.VoIP">
            <summary> voip. </summary>
        </member>
        <member name="T:Azure.Communication.Identity.CommunicationUserIdentifierAndToken">
            <summary> A communication identity with access token. </summary>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.#ctor(Azure.Communication.Identity.Models.CommunicationIdentity)">
            <summary> Initializes a new instance of CommunicationUserIdentifierAndToken. </summary>
            <param name="identity"> A communication identity. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="identity" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.Deconstruct(Azure.Communication.CommunicationUserIdentifier@,Azure.Core.AccessToken@)">
            <summary>Deconstructs the <see cref="T:Azure.Communication.Identity.CommunicationUserIdentifierAndToken" /> into a user and token.</summary>
            <param name="user">The value of the <see cref="P:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.User" /> property.</param>
            <param name="accessToken">The value of the <see cref="P:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.AccessToken" /> property.</param>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.User">
            <summary>A communication user.</summary>
        </member>
        <member name="P:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.AccessToken">
            <summary>The token created for <see cref="P:Azure.Communication.Identity.CommunicationUserIdentifierAndToken.User" />.</summary>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.String@,System.String@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="message">The error message.</param>
            <param name="errorCode">The error code.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            HACK HACK HACK. Some runtime environments like Azure.Functions downgrade System.Diagnostic.DiagnosticSource package version causing method not found exceptions in customer apps
            This type is a temporary workaround to avoid the issue.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
